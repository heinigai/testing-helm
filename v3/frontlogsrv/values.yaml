# Default values for frontlogsrv.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
envType: ""
envFlag: ""
image:
  repository: 579059374235.dkr.ecr.ap-southeast-1.amazonaws.com/klook-deploy/frontlogsrv:master
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 10080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

env: [
  {
    name: KL_ARGS_NATS,
    value: ;;nats://nlb-nats.dev.klook.io:6222
  },
  {
    name: KL_ARGS_LOG_HOST,
    value: t01
  },
  {
    name: KL_ENV,
    value: t01
  },
  {
    name: KL_ARGS_KVADDR,
    value: 172.31.3.109:10075
  },
  {
    name: KL_ARGS_LOGLEVEL,
    value: "4"
  },
  {
    name: KL_ARGS_CONFIGFILE,
    value: /app/conf/service-testing-v2.conf
  },
  {
    name: KL_ARGS_INSTANCE_ID,
    value: "20"
  }
]

nodeSelector: {}

tolerations: []

affinity: {
  nodeAffinity: {
    requiredDuringSchedulingIgnoredDuringExecution: {
      nodeSelectorTerms: [
        matchExpressions: [
          {
            key: klook-travellerpltm.test.klook.io/team,
            operator: In,
            values: [
              test
            ]
          }
        ]
      ]
    }
  }
}

global:
  affinityKey: "klook-travellerpltm.test.klook.io/team"
  affinityValue: "test"
